import("rtt_ros")
ros.import("rtt_rospack")

runScript( ros.find("irp6_bringup") + "/config/common-imports.ops")

ros.import("irp6pm_kinematic")
ros.import("irp6otm_kinematic")
ros.import("irp6tfg_kinematic")
ros.import("conveyor_kinematic")
ros.import("force_control")
ros.import("irp6_force_sensor")
ros.import("irp6_haptic")


//------------------------------------------------------------------------------
//-- Two manipulators and grippers
//------------------------------------------------------------------------------


bool Irp6otSimulation() { return true; }

string Irp6ot_hi_component() { return string("Irp6otHwModel"); }



loadComponent("Irp6otHwModel","HwModel")
Irp6otHwModel.loadService("rosparam")
Irp6otHwModel.rosparam.getAll()
Irp6otHwModel.configure()



runScript( ros.find("irp6_bringup") + "/config/irp6-ot-inside.ops")

Irp6otHwModel.start()
Irp6otScheme.start()

bool Irp6pSimulation() { return true; }

string Irp6p_hi_component() { return string("Irp6pHwModel"); }


//------------------------------------------------------------------------------
//-- Irp6pHardwareInterface
//------------------------------------------------------------------------------
loadComponent("Irp6pHwModel","HwModel")
Irp6pHwModel.loadService("rosparam")
Irp6pHwModel.rosparam.getAll()
Irp6pHwModel.configure()


runScript( ros.find("irp6_bringup") + "/config/irp6-p-inside.ops")

Irp6pHwModel.start()
Irp6pScheme.start()

bool ConvSimulation() { return true; }

string Conv_hi_component() { return string("ConvHwModel"); }


loadComponent("ConvHwModel","HwModel")
ConvHwModel.loadService("rosparam")
ConvHwModel.rosparam.getAll()
ConvHwModel.configure()

runScript( ros.find("irp6_bringup") + "/config/conv-inside.ops")

ConvHwModel.start()
ConvScheme.start()

PortDoubleToFloat64_1.start()

runScript( ros.find("irp6_bringup") + "/config/haptic-inside.ops")
